# ====================================================================
# Graphiti E-commerce Agent Memory Platform - Environment Configuration
# ====================================================================

# ====================================================================
# Azure PostgreSQL Database Configuration
# ====================================================================
# Azure PostgreSQL connection string format:
# postgresql://username:password@hostname:port/database?sslmode=require
DATABASE_URL=postgresql://your_username:your_password@your-server.postgres.database.azure.com:5432/graphiti?sslmode=require

# Individual database components (alternative to DATABASE_URL)
DB_HOST=your-server.postgres.database.azure.com
DB_PORT=5432
DB_NAME=graphiti
DB_USER=your_username
DB_PASSWORD=your_password
DB_SSL_MODE=require

# Connection pool settings
DB_POOL_SIZE=10
DB_MAX_OVERFLOW=20
DB_POOL_TIMEOUT=30

# ====================================================================
# Azure OpenAI Configuration
# ====================================================================
# Azure OpenAI endpoint and credentials
AZURE_OPENAI_ENDPOINT=https://your-resource-name.openai.azure.com/
AZURE_OPENAI_API_KEY=your-azure-openai-api-key
AZURE_OPENAI_API_VERSION=2024-02-01

# GPT-4 model configuration
AZURE_OPENAI_GPT4_DEPLOYMENT_NAME=gpt-4o-mini
AZURE_OPENAI_GPT4_MODEL_NAME=gpt-4o-mini

# Text embedding model configuration
AZURE_OPENAI_EMBEDDING_DEPLOYMENT_NAME=text-embedding-3-small
AZURE_OPENAI_EMBEDDING_MODEL_NAME=text-embedding-3-small
AZURE_OPENAI_EMBEDDING_DIMENSIONS=1536

# Model parameters
AZURE_OPENAI_MAX_TOKENS=4000
AZURE_OPENAI_TEMPERATURE=0.1
AZURE_OPENAI_TOP_P=0.95

# ====================================================================
# Application Configuration
# ====================================================================
# Environment (development, staging, production)
ENVIRONMENT=development

# Debug settings
DEBUG=true
LOG_LEVEL=INFO

# Performance settings
MAX_QUERY_TIME=2.0
ENABLE_QUERY_CACHING=true
CACHE_TTL_SECONDS=300

# ====================================================================
# Gradio UI Configuration
# ====================================================================
# Gradio interface settings
GRADIO_SHARE=false
GRADIO_PORT=7860
GRADIO_SERVER_NAME=127.0.0.1
GRADIO_SHOW_TIPS=false
GRADIO_SHOW_ERROR_MSG=true

# UI features
ENABLE_GRAPH_VISUALIZATION=true
ENABLE_REAL_TIME_UPDATES=true
ENABLE_SCENARIO_DEMOS=true

# ====================================================================
# FastAPI Backend Configuration
# ====================================================================
# API server settings
API_HOST=0.0.0.0
API_PORT=8000
API_RELOAD=true

# CORS settings
CORS_ORIGINS=["http://localhost:3000", "http://localhost:7860", "http://127.0.0.1:7860"]
CORS_ALLOW_CREDENTIALS=true
CORS_ALLOW_METHODS=["*"]
CORS_ALLOW_HEADERS=["*"]

# ====================================================================
# Security Configuration
# ====================================================================
# JWT settings (if implementing authentication)
SECRET_KEY=your-secret-key-change-this-in-production
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30

# API rate limiting
RATE_LIMIT_PER_MINUTE=100

# ====================================================================
# Data Generation Configuration
# ====================================================================
# Synthetic data settings
GENERATE_SAMPLE_DATA=true
SAMPLE_CUSTOMERS=100
SAMPLE_PRODUCTS=200
SAMPLE_EVENTS_PER_DAY=500
SIMULATION_START_DATE=2024-01-01
SIMULATION_END_DATE=2024-12-31

# ====================================================================
# Redis Configuration (optional - for caching)
# ====================================================================
# Redis connection (if using for caching)
REDIS_URL=redis://localhost:6379/0
REDIS_PASSWORD=
REDIS_SSL=false

# ====================================================================
# Monitoring and Logging Configuration
# ====================================================================
# Application Insights (optional)
APPLICATIONINSIGHTS_CONNECTION_STRING=

# Logging settings
LOG_FORMAT=%(asctime)s - %(name)s - %(levelname)s - %(message)s
LOG_FILE=logs/graphiti.log
LOG_MAX_BYTES=10485760
LOG_BACKUP_COUNT=5

# ====================================================================
# Graph Processing Configuration
# ====================================================================
# Apache AGE settings
AGE_GRAPH_NAME=graphiti_graph
AGE_MAX_CONNECTIONS=50

# pgvector settings
PGVECTOR_EXTENSION_ENABLED=true
VECTOR_INDEX_TYPE=ivfflat
VECTOR_INDEX_LISTS=100

# Entity extraction settings
ENTITY_EXTRACTION_BATCH_SIZE=10
RELATIONSHIP_EXTRACTION_ENABLED=true
CONTRADICTION_DETECTION_ENABLED=true

# ====================================================================
# Performance Tuning
# ====================================================================
# Query optimization
ENABLE_QUERY_OPTIMIZATION=true
QUERY_CACHE_SIZE=1000
EMBEDDING_CACHE_SIZE=5000

# Background processing
BACKGROUND_TASK_WORKERS=4
EVENT_PROCESSING_BATCH_SIZE=50

# Memory management
MAX_MEMORY_USAGE_GB=8
GARBAGE_COLLECTION_THRESHOLD=1000

# ====================================================================
# Development/Testing Configuration
# ====================================================================
# Testing settings
TEST_DATABASE_URL=postgresql://test_user:test_password@localhost:5432/graphiti_test
RUN_INTEGRATION_TESTS=false
MOCK_LLM_RESPONSES=false

# Development features
ENABLE_AUTO_RELOAD=true
ENABLE_DEBUG_TOOLBAR=true
SHOW_SQL_QUERIES=false

# ====================================================================
# Deployment Configuration
# ====================================================================
# Docker settings
DOCKER_IMAGE_TAG=latest
CONTAINER_PORT=8000

# Health check settings
HEALTH_CHECK_INTERVAL=30
HEALTH_CHECK_TIMEOUT=10
HEALTH_CHECK_RETRIES=3

# ====================================================================
# Feature Flags
# ====================================================================
# Enable/disable specific features
FEATURE_TEMPORAL_QUERIES=true
FEATURE_HYBRID_SEARCH=true
FEATURE_GRAPH_VISUALIZATION=true
FEATURE_REAL_TIME_EVENTS=true
FEATURE_SCENARIO_TESTING=true
FEATURE_EXPORT_DATA=true
FEATURE_USER_AUTHENTICATION=false

# ====================================================================
# Notes for Setup
# ====================================================================
# 1. Copy this file to .env and fill in your actual values
# 2. For Azure PostgreSQL:
#    - Create a PostgreSQL server in Azure
#    - Enable Apache AGE and pgvector extensions
#    - Create a database named 'graphiti'
#    - Update connection details above
# 3. For Azure OpenAI:
#    - Create an Azure OpenAI resource
#    - Deploy GPT-4o-mini and text-embedding-3-small models
#    - Update endpoint, key, and deployment names above
# 4. Never commit the actual .env file to version control
# 5. Ensure all secrets are properly secured in production
